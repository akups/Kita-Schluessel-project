{"version":3,"sources":["components/Home.js","components/Navbar.js","components/Signup.js","components/Login.js","components/UserPortal.js","components/Footer.js","components/DiscoverHamburg.js","components/Discover.js","components/Detail.js","components/Map.js","components/BerlinMap.js","components/DisplayMaps.js","components/AddKita.js","App.js","serviceWorker.js","index.js"],"names":["Home","lang","localStorage","getItem","className","homeLocales","connect","to","view","signup","login","Component","Navbar","props","useState","img","setImage","imageChange","setItem","updatePage","user","src","alt","height","navbarLocales","data","map","discover","onClick","axios","delete","then","setUser","logout","Signup","state","name","email","password","role","redirect","handleSubmit","event","preventDefault","post","response","history","push","catch","err","setState","message","setFormState","target","value","onChange","this","signupLocales","title","welcome","htmlFor","id","type","Login","console","log","loginLocales","prompt","UserPortal","portalLocales","greeting","article","Footer","DiscoverHamburg","hamburgKitas","search","select","searchedKita","selected","handleSelect","get","kitas","toLowerCase","kita","filter","kita_suburb","kita_name","includes","el","key","_id","placeholder","suburb","Discover","searchedName","filteredKitas","viertel","discoverLocales","width","neighborhood","Detail","deleteKita","deleteKitaId","match","params","kitaId","found","find","detailsLocales","address","adresse","postcode","postleitzahl","city","stadt","phone","href","telefon","return","navStyle","position","top","left","padding","layers","colors","Map","drawLegends","layer","i","color","style","backgroundColor","display","justifyContent","viewport","latitude","longitude","zoom","bearing","pitch","mapStyle","mapboxApiAccessToken","onViewportChange","class","border","mapLocales","move","BerlinMap","onloadMap","length","item","document","createElement","innerHTML","appendChild","legend","DisplayMaps","displayBerlin","handlechangeMap","AddKita","district","phoneNumber","spots","spotsforunderthree","spotsforoverthree","addNewKita","App","userObj","forceUpdate","exact","path","component","render","React","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c9957fe1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Component } from \"react\";\nimport homeLocales from \"../locales/locales.home.json\";\n\nclass Home extends Component {\n  /* select = () => {\n    obj = document.test.linkselect;\n\n    index = obj.selectedIndex;\n    if (index != 0) {\n      href = obj.options[index].value;\n      location.href = href;\n    }\n  }; */\n\n  render() {\n    const lang = localStorage.getItem(\"lang\");\n    return (\n      <div className=\"home-component\">\n          <h1>KitaSchlüssel</h1>\n          <p>{homeLocales.connect[lang]}</p>\n          <div className=\"home-buttons\">\n            <Link to=\"/map\">\n              <button className=\"home-map\">{homeLocales.view[lang]}</button>\n            </Link>\n            <Link to=\"/signup\">\n              <button className=\"home-signup\">\n                {homeLocales.signup[lang]}\n              </button>\n            </Link>\n          </div>\n          <p>\n            <Link className=\"login-link\" to=\"/login\">\n              {homeLocales.login[lang]}\n            </Link>\n          </p>\n        </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\n// import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport navbarLocales from \"../locales/locales.navbar.json\";\n\nconst Navbar = props => {\n  const [img, setImage] = useState(\"/image/germany.png\");\n\n  const imageChange = () => {\n    //console.log(\"imagechange\", localStorage.getItem(\"lang\"));\n    const lang = localStorage.getItem(\"lang\");\n    //console.log(\"LANG\", lang);\n    if (lang === \"en\") {\n      setImage(\"/image/uk.png\");\n      localStorage.setItem(\"lang\", \"de\");\n    } else if (lang === \"de\") {\n      setImage(\"/image/germany.png\");\n      localStorage.setItem(\"lang\", \"en\");\n    }\n    props.updatePage();\n    //This is coming from App.js\n  };\n\n  // const imageChange = () => {\n  //   //console.log(\"imagechange\");\n  //   const lang = localStorage.getItem(\"lang\");\n  //   if (img === \"/image/uk.png\") {\n  //     setImage(\"/image/germany.png\");\n  //   } else if (img === \"/image/germany.png\") {\n  //     setImage(\"/image/uk.png\");\n  //   }\n  // };\n\n  // const imageChange = () => {\n  //   console.log(\"Changing lang\");\n  //   const lang = localStorage.getItem(\"lang\");\n  //   if (lang === \"de\") {\n  //     localStorage.setItem(\"lang\", \"en\");\n  //   } else if (lang === \"en\") {\n  //     localStorage.setItem(\"lang\", \"de\");\n  //   }\n  // };\n\n  const logout = () => {\n    axios.delete(\"/api/auth/logout\").then(() => {\n      props.setUser(null);\n    });\n  };\n\n  const lang = localStorage.getItem(\"lang\");\n\n  if (props.user) {\n    return (\n      <nav className=\"navilink\">\n        <Link className=\"logo-link\" to=\"/\">\n          <img\n            src=\"/image/Logo.png\"\n            alt=\"Kita Schlüssel Logo\"\n            height=\"85px\"\n          ></img>\n        </Link>\n        <div className=\"main-nav\">\n          <Link to=\"/data\">{navbarLocales.data[lang]}</Link>\n          <Link to=\"/map\">{navbarLocales.map[lang]}</Link>\n          <Link to=\"/discover\">{navbarLocales.discover[lang]}</Link>\n        </div>\n        <div className=\"login-nav\">\n          <Link onClick={logout} to=\"/\">\n            {navbarLocales.logout[lang]}\n          </Link>\n          <img onClick={imageChange} height=\"30px\" src={img} alt=\"\" />\n          <Link to=\"/userportal\">\n            <img height=\"30px\" src=\"/image/user.png\" alt=\"User Portal\" />\n          </Link>\n        </div>\n      </nav>\n    );\n  }\n  return (\n    <nav className=\"navilink\">\n      <Link className=\"logo-link\" to=\"/\">\n        <img\n          src=\"/image/Logo.png\"\n          alt=\"Kita Schlüssel Logo\"\n          height=\"85px\"\n        ></img>\n      </Link>\n      <div className=\"main-nav\">\n        <Link to=\"/data\">{navbarLocales.data[lang]}</Link>\n        <Link to=\"/map\">{navbarLocales.map[lang]}</Link>\n        <Link to=\"/discover\">{navbarLocales.discover[lang]}</Link>\n      </div>\n      <div className=\"login-nav\">\n        <Link to=\"/login\">{navbarLocales.login[lang]}</Link>\n        <Link to=\"/signup\">{navbarLocales.signup[lang]}</Link>\n        <img\n          onClick={imageChange}\n          height=\"30px\"\n          src={img}\n          alt=\"Language Switcher\"\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport signupLocales from \"../locales/locales.signup.json\";\n\nclass Signup extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"parent\",\n    redirect: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .post(\"/api/auth/signup\", {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        role: this.state.role\n      })\n      .then(response => {\n        //console.log(\"RSPONSE\", response);\n\n        //this.props.history.push(\"/\");\n\n        //this.props.setUser(this.response.data);\n        // this.setState({\n        //   redirect: true\n        // });\n        this.props.setUser(response.data);\n        this.props.history.push(\"/userportal\");\n      })\n      .catch(err => {\n        this.setState({\n          message: err.response.data.message\n        });\n      });\n  };\n\n  setFormState = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  onChange = event => {\n    this.setState({ role: event.target.value });\n  };\n\n  render() {\n    const lang = localStorage.getItem(\"lang\");\n\n    if (this.state.redirect) {\n      return <Redirect to=\"/userportal\" />;\n    }\n    return (\n      <div className=\"signup-componenet\">\n        <h1>{signupLocales.title[lang]}</h1>\n        <p>{signupLocales.welcome[lang]}</p>\n        <form>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            name=\"name\"\n            id=\"name\"\n            value={this.state.name}\n            onChange={this.setFormState}\n            type=\"text\"\n          />\n          <label htmlFor=\"email\">Email Address</label>\n          <input\n            name=\"email\"\n            id=\"email\"\n            type=\"text\"\n            value={this.state.email}\n            onChange={this.setFormState}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={this.state.password}\n            onChange={this.setFormState}\n          />\n          <label htmlFor=\"role\">Role</label>\n          <select\n            name=\"role\"\n            id=\"role\"\n            value={this.state.role}\n            onChange={this.onChange}\n          >\n            {/* <option value=\"\">Parent</option>\n            <option value=\"\">Government</option>\n            <option value=\"\">Owner</option>\n\n            <option\n              value={this.state.role}\n              onChange={this.onChange}\n              id=\"role\"\n            /> */}\n            <option>parent</option>\n            <option>government</option>\n            <option>owner</option>\n          </select>\n          <button onClick={this.handleSubmit} type=\"submit\">\n            Submit\n          </button>\n        </form>\n        {this.state.message && <p>{this.state.message}</p>}\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport loginLocales from \"../locales/locales.login.json\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n\n    // redirect: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    //1)\n\n    axios\n      .post(\"/api/auth/login\", {\n        email: this.state.email,\n        password: this.state.password\n      })\n      //3)\n      .then(response => {\n        //console.log(\"loginuser\", response.data);\n        // this.setState({\n        //   redirect: false\n        // });\n        this.props.setUser(response.data);\n        this.props.history.push(\"userportal\");\n      })\n      .catch(err => {\n        console.log(err);\n        //console.log(err.response.data.message);\n        // this.setState({\n        //   message: err.response.data.message\n        // });\n      });\n  };\n\n  setFormState = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  render() {\n    const lang = localStorage.getItem(\"lang\");\n\n    // if (this.state.redirect) {\n    //   return <Redirect to=\"/userportal\" />;\n    // }\n    return (\n      <div>\n        <h1>{loginLocales.title[lang]}</h1>\n        <p>{loginLocales.prompt[lang]}</p>\n        <form>\n          <label htmlFor=\"email\">email:</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"email\"\n            value={this.state.email}\n            onChange={this.setFormState}\n          />\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={this.state.password}\n            onChange={this.setFormState}\n          />\n          <button onClick={this.handleSubmit}>Login</button>\n        </form>\n        {this.state.message && <p>{this.state.message}</p>}\n      </div>\n    );\n  }\n}\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Component } from \"react\";\nimport portalLocales from \"../locales/locales.portal.json\";\n\nclass UserPortal extends Component {\n  state = {\n    name: \"\"\n  };\n\n  render() {\n    const lang = localStorage.getItem(\"lang\");\n    //console.log(\"USER\", this.props.user);\n    return (\n      <div>\n        <h1>\n          {portalLocales.greeting[lang]} {this.props.user.name}!\n        </h1>\n        <article>{portalLocales.article[lang]}</article>\n        <p></p>\n        <Link to=\"/discover\">\n          <button>{portalLocales.discover[lang]}</button>\n        </Link>\n        <Link to=\"/map\">\n          <button>{portalLocales.map[lang]}</button>\n        </Link>\n        <Link to=\"/discover/hamburg\">\n          <button>Click me</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default UserPortal;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <footer><p>© 2020 KitaSchlüssel</p></footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n// import discoverLocales from \"../locales/locales.discover.json\";\n\nexport default class DiscoverHamburg extends Component {\n  state = {\n    hamburgKitas: [],\n    search: \"\",\n    select: \"--\",\n    searchedKita: []\n  };\n\n  componentDidMount() {\n    axios.get(\"/api/discover/hamburg\").then(response => {\n      this.setState({\n        hamburgKitas: response.data.kitas\n      });\n      console.log(\"RESPONSE\", response.data);\n    });\n  }\n\n  searchedKita = event => {\n    this.setState({\n      [event.target.name]:\n        event.target.type === \"select\"\n          ? event.target.selected\n          : event.target.value\n    });\n  };\n\n  handleSelect = event => {\n    this.setState({ select: event.state.value });\n  };\n  render() {\n    console.log(this.state.hamburgKitas);\n\n    const search = this.state.search.toLowerCase();\n    const filteredKitasBySelect = this.state.hamburgKitas.filter(kita => {\n      if (this.state.select === \"--\") {\n        return true;\n      }\n      return kita.kita_suburb === this.state.select;\n    });\n    const filteredKitas = filteredKitasBySelect.filter(kita => {\n      return kita.kita_name.toLowerCase().includes(search);\n    });\n    // const lang = localStorage.getItem(\"lang\");\n    const kita = filteredKitas.map(el => {\n      return (\n        <tr key={el._id}>\n          <Link className=\"kita-container\" to={`/discoverHamburg/${el._id}`}>\n            <td>{el.kita_name}</td>\n          </Link>\n          <td>{el.kita_suburb}</td>\n        </tr>\n      );\n    });\n    //\n\n    const suburbs = [\"Berlin\", \"Bonn\"];\n\n    // loop through all the kitas and add the unique suburb names\n\n    return (\n      <div>\n        {/* <h1>{discoverLocales.title[lang]}</h1> */}\n        <h1>Discover</h1>\n        <label htmlFor=\"searchbyname\">Search Kita</label>\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={this.state.search}\n          onChange={this.searchedKita}\n          placeholder=\"search by name\"\n        />\n        <label htmlFor=\"filterbysuburb\">Select: </label>\n        <select\n          name=\"select\"\n          type=\"select\"\n          value={this.state.select}\n          onChange={this.searchedKita}\n        >\n          {suburbs.map(suburb => (\n            <option value={suburb}>{suburb}</option>\n          ))}\n        </select>\n        <tbody className=\"table\">{kita}</tbody>\n      </div>\n    );\n  }\n}\n\n// }\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport discoverLocales from \"../locales/locales.discover.json\";\n\nclass Discover extends Component {\n  state = {\n    kitas: [],\n    search: \"\",\n    select: \"--\",\n    searchedKita: []\n  };\n\n  //1. From frontend, axios request a kita data-> route kitas.js\n  componentDidMount() {\n    axios.get(\"/api/discover\").then(response => {\n      //console.log(response.data.kitas);\n      this.setState({\n        kitas: response.data.kitas\n      });\n    });\n  }\n\n  searchedName = event => {\n    //console.log(\"<VALUE?>\", event.target.value);\n    //console.log(\"<NAME?>\", event.target.name);\n    this.setState({\n      [event.target.name]:\n        event.target.type === \"select\"\n          ? event.target.selected\n          : event.target.value\n    });\n\n    // //console.log(this.state.kitas);\n    // const name = event.target.name;\n    // const value = event.target.value;\n    // //console.log(name);\n  };\n\n  handleSelect = event => {\n    this.setState({ select: event.target.value });\n  };\n\n  render() {\n    //console.log(this.state.select);\n\n    const search = this.state.search.toLowerCase();\n    //const select = this.state.select;\n\n    const filteredKitasBySelect = this.state.kitas.filter(kita => {\n      if (this.state.select === \"--\") {\n        return true;\n      }\n      return kita.viertel === this.state.select;\n    });\n\n    const filteredKitas = filteredKitasBySelect.filter(kita => {\n      return kita.name.toLowerCase().includes(search);\n    });\n    //console.log(\"<What's searched Kitas?>\", filteredKitas);\n    //console.log(\"<big kita>\", Kitas);\n    const lang = localStorage.getItem(\"lang\");\n\n    const kita = filteredKitas.map(el => {\n      return (\n        <tbody className=\"table\" key={el._id}>\n          <tr>\n            <Link className=\"kita-container\" to={`/discover/${el._id}`}>\n              <td>{el.name}</td>\n            </Link>\n\n            <td>{el.viertel}</td>\n          </tr>\n        </tbody>\n      );\n    });\n\n    //console.log(\"DISCOVER\", this.props.user.role);\n    if (this.props.user.role === \"government\") {\n      return (\n        <div>\n          <h1>{discoverLocales.title[lang]}</h1>\n          <Link to=\"/addkita\">\n            <button>Add new kita</button>\n          </Link>\n          <label htmlFor=\"searchbyname\">Search Kita: </label>\n          <input\n            type=\"text\"\n            name=\"search\"\n            value={this.state.search}\n            onChange={this.searchedName}\n            placeholder=\"search by name\"\n          />\n          <label htmlFor=\"filterbyviertel\">Select: </label>\n          <select\n            name=\"select\"\n            type=\"select\"\n            value={this.state.select}\n            onChange={this.searchedName}\n            // selected={this.state.select}\n          >\n            <option value=\"--\">select</option>\n            <option value=\"Charlottenburg-Wilmersdorf\">\n              Charlottenburg-Wilmersdorf\n            </option>\n            <option value=\"Friedrichshain-Kreuzberg\">\n              Friedrichshain-Kreuzberg\n            </option>\n            <option value=\"Lichtenberg\">Lichtenberg</option>\n            <option value=\"Marzahn-Hellersdorf\">Marzahn-Hellersdorf</option>\n            <option value=\"Mitte\">Mitte</option>\n            <option value=\"Neukoelln\">Neukoelln</option>\n            <option value=\"Pankow\">Pankow</option>\n            <option value=\"Reinickendorf\">Reinickendorf</option>\n            <option value=\"Spandau\">Spandau</option>\n            <option value=\"Steglitz-Zehlendorf\">Steglitz-Zehlendorf</option>\n            <option value=\"Tempelhof-Schoeneberg\">Tempelhof-Schoeneberg</option>\n            <option value=\"Treptow-Koepenick\">Treptow-Koepenick</option>\n          </select>\n          <table className=\"table-container\">\n            <thead>\n              <tr>\n                <th width=\"50%\">Kita Name</th>\n                <th width=\"50%\">{discoverLocales.neighborhood[lang]}</th>\n              </tr>\n            </thead>\n            {kita}\n          </table>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <h1>{discoverLocales.title[lang]}</h1>\n        <label htmlFor=\"searchbyname\">Search Kita: </label>\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={this.state.search}\n          onChange={this.searchedName}\n          placeholder=\"search by name\"\n        />\n        <label htmlFor=\"filterbyviertel\">Select: </label>\n        <select\n          name=\"select\"\n          type=\"select\"\n          value={this.state.select}\n          onChange={this.searchedName}\n          // selected={this.state.select}\n        >\n          <option value=\"--\">select</option>\n          <option value=\"Charlottenburg-Wilmersdorf\">\n            Charlottenburg-Wilmersdorf\n          </option>\n          <option value=\"Friedrichshain-Kreuzberg\">\n            Friedrichshain-Kreuzberg\n          </option>\n          <option value=\"Lichtenberg\">Lichtenberg</option>\n          <option value=\"Marzahn-Hellersdorf\">Marzahn-Hellersdorf</option>\n          <option value=\"Mitte\">Mitte</option>\n          <option value=\"Neukoelln\">Neukoelln</option>\n          <option value=\"Pankow\">Pankow</option>\n          <option value=\"Reinickendorf\">Reinickendorf</option>\n          <option value=\"Spandau\">Spandau</option>\n          <option value=\"Steglitz-Zehlendorf\">Steglitz-Zehlendorf</option>\n          <option value=\"Tempelhof-Schoeneberg\">Tempelhof-Schoeneberg</option>\n          <option value=\"Treptow-Koepenick\">Treptow-Koepenick</option>\n        </select>\n        <table className=\"table-container\">\n          <thead>\n            <tr>\n              <th width=\"50%\">Kita Name</th>\n              <th width=\"50%\">{discoverLocales.neighborhood[lang]}</th>\n            </tr>\n          </thead>\n          {kita}\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Discover;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport detailsLocales from \"../locales/locales.details.json\";\n\nclass Detail extends Component {\n  state = {\n    kitas: false\n  };\n\n  componentDidMount() {\n    const kitaId = this.props.match.params.id;\n    axios.get(\"/api/discover/:id\").then(response => {\n      //console.log(response.data.kitas);\n\n      let found = response.data.kitas.find(kita => {\n        return kita._id === kitaId;\n      });\n      //console.log(found);\n      this.setState({\n        kitas: found\n      });\n    });\n  }\n\n  //delete kita\n  deleteKita = event => {\n    event.preventDefault();\n    const deleteKitaId = this.props.match.params.id;\n    //console.log(\"deleteKita?\", deleteKitaId);\n    axios.delete(`/api/discover/${deleteKitaId}/delete`).then(response => {\n      this.props.history.push(\"/discover\");\n      //console.log(\"DETAIL?\", response);\n    });\n  };\n\n  render() {\n    //console.log(\"FOUND?\", this.state.kitas);\n    const lang = localStorage.getItem(\"lang\");\n\n    if (!this.state.kitas) {\n      return <h1>LOADING</h1>;\n    }\n\n    if (this.props.user.role === \"government\") {\n      return (\n        <div className=\"detail-container\">\n          <img height=\"200px\" width=\"200px\" src=\"/image/kitaimage.png\" alt=\"\" />\n          <h1>{this.state.kitas.name}</h1>\n          <h3>{detailsLocales.address[lang]}</h3>\n          <p>{this.state.kitas.adresse}</p>\n          <h3>{detailsLocales.postcode[lang]}:</h3>\n          <p>{this.state.kitas.postleitzahl}</p>\n          <h3>{detailsLocales.city[lang]}</h3>\n          <p>{this.state.kitas.stadt}</p>\n          <h3>{detailsLocales.phone[lang]}</h3>\n          <p>\n            <a href={\"tel:\" + this.state.kitas.telefon}>\n              {this.state.kitas.telefon}\n            </a>\n          </p>\n          <h3>{detailsLocales.email[lang]}</h3>\n          <p>\n            <a href={\"mailto:\" + this.state.kitas.email}>\n              {this.state.kitas.email}\n            </a>\n          </p>\n          <button onClick={this.deleteKita}>delete kita</button>\n          <Link to=\"/discover\">\n            <button>{detailsLocales.return[lang]}</button>\n          </Link>\n        </div>\n      );\n    }\n\n    //console.log(\"DETAILS?\", this.props.user.role);\n    return (\n      <div className=\"detail-container\">\n        <img height=\"200px\" width=\"200px\" src=\"/image/kitaimage.png\" alt=\"\" />\n        <h1>{this.state.kitas.name}</h1>\n        <h3>{detailsLocales.address[lang]}</h3>\n        <p>{this.state.kitas.adresse}</p>\n        <h3>{detailsLocales.postcode[lang]}:</h3>\n        <p>{this.state.kitas.postleitzahl}</p>\n        <h3>{detailsLocales.city[lang]}</h3>\n        <p>{this.state.kitas.stadt}</p>\n        <h3>{detailsLocales.phone[lang]}</h3>\n        <p>\n          <a href={\"tel:\" + this.state.kitas.telefon}>\n            {this.state.kitas.telefon}\n          </a>\n        </p>\n        <h3>{detailsLocales.email[lang]}</h3>\n        <p>\n          <a href={\"mailto:\" + this.state.kitas.email}>\n            {this.state.kitas.email}\n          </a>\n        </p>\n\n        <Link to=\"/discover\">\n          <button>{detailsLocales.return[lang]}</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Detail;\n","import React, { Component } from \"react\";\n//import MapGL, { NavigationControl } from \"react-map-gl\";\nimport mapLocales from \"../locales/locales.map.json\";\nimport MapGL, { Marker, Popup, NavigationControl } from \"react-map-gl\";\n\nconst TOKEN =\n  \"pk.eyJ1IjoiYWt1cDIxIiwiYSI6ImNrNzd0bzJ2cTA5MWgzbG55Z3oxeGEwcXEifQ._STj0U9zQNrv2I1Stwicig\";\nconst navStyle = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  padding: \"10px\"\n};\n\nconst layers = [\n  \"-260-100\",\n  \"100-200\",\n  \"200-400\",\n  \"400-600\",\n  \"600-800\",\n  \"800-1000\",\n  \"1000-1500\",\n  \"1500-2000\",\n  \"2000-2500\",\n  \"2500-4509\"\n];\nconst colors = [\n  \"#daf5f4\",\n  \"#b5ecec\",\n  \"#89ecda\",\n  \"#40e0d0\",\n  \"#3acabb\",\n  \"#2d9d92\",\n  \"#007777\",\n  \"#005555\",\n  \"#003333\",\n  \"#000a0a\"\n];\n\nexport default class Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        latitude: 53.57532,\n        longitude: 10.01534,\n        zoom: 9.5,\n        bearing: 0,\n        pitch: 0,\n        width: 1000,\n        height: 800\n      }\n    };\n    // this.renderPopup = this.renderPopup.bind(this);\n  }\n  drawLegends = () => {\n    return layers.map((layer, i) => {\n      const color = colors[i];\n      return (\n        <div\n          style={{\n            backgroundColor: \"white\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: 120\n          }}\n        >\n          <span\n            className=\"legend-key\"\n            style={{\n              display: \"inline-block\",\n              width: \"25px\",\n              backgroundColor: color\n            }}\n          ></span>\n          <span>{layer}</span>\n        </div>\n      );\n    });\n  };\n\n  render() {\n    const { viewport } = this.state;\n    const lang = localStorage.getItem(\"lang\");\n    // console.log(\"lang\", mapLocales, lang);\n    return (\n      <MapGL\n        {...viewport}\n        mapStyle=\"mapbox://styles/akup21/ck7dbfd500pvk1ikikrq0r7eo\"\n        mapboxApiAccessToken={TOKEN}\n        onViewportChange={viewport => this.setState({ viewport })}\n      >\n        <div className=\"nav\" style={navStyle}>\n          <NavigationControl />\n          <div>\n            <div id=\"map\"></div>\n            <div\n              class=\"map-overlay\"\n              id=\"features\"\n              style={{\n                display: \"inline-block\",\n                width: 200,\n                height: 150,\n                backgroundColor: \"white\",\n                border: 20\n              }}\n            >\n              <h2>Hamburg {mapLocales.kitas[lang]}</h2>\n              <div id=\"pd\">\n                <p>{mapLocales.move[lang]}</p>\n              </div>\n            </div>\n            <div class=\"map-overlay\" id=\"legend\">\n              {this.drawLegends()}\n            </div>\n          </div>\n        </div>\n      </MapGL>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport MapGL, { NavigationControl } from \"react-map-gl\";\nimport mapLocales from \"../locales/locales.map.json\";\n\nconst TOKEN =\n  \"pk.eyJ1IjoiYWt1cDIxIiwiYSI6ImNrNzd0bzJ2cTA5MWgzbG55Z3oxeGEwcXEifQ._STj0U9zQNrv2I1Stwicig\";\nconst navStyle = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  padding: \"10px\",\n  width: 30\n};\n\nconst layers = [\n  \"-423-0\",\n  \"0-100\",\n  \"100-200\",\n  \"200-300\",\n  \"300-400\",\n  \"400-500\",\n  \"500-600\",\n  \"600-700\",\n  \"700-800\",\n  \"900-1109\"\n];\nconst colors = [\n  \"#daf5f4\",\n  \"#b5ecec\",\n  \"#89ecda\",\n  \"#40e0d0\",\n  \"#3acabb\",\n  \"#2d9d92\",\n  \"#007777\",\n  \"#005555\",\n  \"#003333\",\n  \"#000a0a\"\n];\n\n// Map.on(\"load\", function() {\n//   // the rest of the code will go in here\n// });\n\nexport default class BerlinMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        latitude: 52.52008,\n        longitude: 13.40495,\n        zoom: 9.5,\n        bearing: 0,\n        pitch: 0,\n        width: 1000,\n        height: 800\n      }\n    };\n  }\n\n  onloadMap = event => {\n    let legend;\n    for (let i = 0; i < layers.length; i++) {\n      var layer = layers[i];\n      var color = colors[i];\n      var item = document.createElement(\"div\");\n      var key = document.createElement(\"span\");\n      key.className = \"legend-key\";\n      key.style.backgroundColor = color;\n\n      var value = document.createElement(\"span\");\n      value.innerHTML = layer;\n      item.appendChild(key);\n      item.appendChild(value);\n      legend.appendChild(item);\n    }\n  };\n\n  drawLegends = () => {\n    return layers.map((layer, i) => {\n      const color = colors[i];\n      return (\n        <div\n          style={{\n            backgroundColor: \"white\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: 100\n          }}\n        >\n          <span\n            className=\"legend-key\"\n            style={{\n              display: \"inline-block\",\n              width: \"20px\",\n              backgroundColor: color\n            }}\n          ></span>\n          <span>{layer}</span>\n        </div>\n      );\n    });\n  };\n\n  render() {\n    const { viewport } = this.state;\n    const lang = localStorage.getItem(\"lang\");\n\n    return (\n      <MapGL\n        {...viewport}\n        mapStyle=\"mapbox://styles/akup21/ck7an89si3ifj1iumt6579c0z\"\n        mapboxApiAccessToken={TOKEN}\n        onViewportChange={viewport => this.setState({ viewport })}\n      >\n        <div className=\"nav\" style={navStyle}>\n          <NavigationControl />\n          <div>\n            <div id=\"map\"></div>\n            <div\n              class=\"map-overlay\"\n              id=\"features\"\n              style={{\n                display: \"inline-block\",\n                width: 150,\n                height: 100,\n                backgroundColor: \"white\",\n                border: 20\n              }}\n            >\n              {/* <h2>Berlin {mapLocales.kitas[lang]}</h2> */}\n\n              {/* <h2>Berlin Kitaplätze</h2> */}\n              <div id=\"pd\">\n                <p>{mapLocales.move[lang]}</p>\n              </div>\n            </div>\n            <div class=\"map-overlay\" id=\"legend\">\n              {this.drawLegends()}\n            </div>\n          </div>\n        </div>\n      </MapGL>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Map from \"./Map\";\nimport BerlinMap from \"./BerlinMap\";\n\nexport default class DisplayMaps extends Component {\n  state = {\n    displayBerlin: true\n  };\n\n  handlechangeMap = event => {\n    event.preventDefault();\n    this.setState({\n      displayBerlin: !this.state.displayBerlin\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.handlechangeMap}>\n          {this.state.displayBerlin ? \"Hamburg\" : \"Berlin\"}\n        </button>\n        {this.state.displayBerlin ? <BerlinMap /> : <Map />}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n//import discoverLocales from \"../locales/locales.discover.json\";\n\nclass AddKita extends Component {\n  state = {\n    name: \"\",\n    district: \"select\",\n    address: \"\",\n    postcode: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n    spots: \"\",\n    spotsforunderthree: \"\",\n    spotsforoverthree: \"\",\n    redirect: false\n  };\n\n  setFormState = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  addNewKita = event => {\n    //console.log(\"WORKING?\");\n    event.preventDefault();\n    //1. post the data to backend -> routes kitas.js\n    axios\n      .post(\"/api/addkita\", {\n        name: this.state.name,\n        district: this.state.district,\n        address: this.state.address,\n        postcode: this.state.postcode,\n        phoneNumber: this.state.phoneNumber,\n        email: this.state.email,\n        spots: this.state.spots,\n        spotsforunderthree: this.state.spotsforunderthree,\n        spotsforoverthree: this.state.spotsforoverthree\n      })\n      .then(response => {\n        this.props.history.push(\"/discover\");\n        console.log(\"this is response\", response);\n      })\n      .catch(err => {\n        this.setState({\n          message: err.response.data.message\n        });\n      });\n  };\n\n  render() {\n    //console.log(this.state);\n\n    if (this.state.redirect) {\n      return <Redirect to=\"/discover\" />;\n    }\n\n    return (\n      <div>\n        <h1>Add a kita</h1>\n        <label htmlFor=\"name\">name:</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          onChange={this.setFormState}\n        />\n        <label htmlFor=\"district\">District:</label>\n        <select\n          name=\"district\"\n          type=\"select\"\n          value={this.state.district}\n          onChange={this.setFormState}\n        >\n          <option value=\"--\">select</option>\n          <option value=\"Charlottenburg-Wilmersdorf\">\n            Charlottenburg-Wilmersdorf\n          </option>\n          <option value=\"Friedrichshain-Kreuzberg\">\n            Friedrichshain-Kreuzberg\n          </option>\n          <option value=\"Lichtenberg\">Lichtenberg</option>\n          <option value=\"Marzahn-Hellersdorf\">Marzahn-Hellersdorf</option>\n          <option value=\"Mitte\">Mitte</option>\n          <option value=\"Neukoelln\">Neukoelln</option>\n          <option value=\"Pankow\">Pankow</option>\n          <option value=\"Reinickendorf\">Reinickendorf</option>\n          <option value=\"Spandau\">Spandau</option>\n          <option value=\"Steglitz-Zehlendorf\">Steglitz-Zehlendorf</option>\n          <option value=\"Tempelhof-Schoeneberg\">Tempelhof-Schoeneberg</option>\n          <option value=\"Treptow-Koepenick\">Treptow-Koepenick</option>\n        </select>\n        <label htmlFor=\"address\">address:</label>\n        <input\n          type=\"text\"\n          name=\"address\"\n          value={this.state.address}\n          onChange={this.setFormState}\n        />\n        <label htmlFor=\"postcode\">postcode</label>\n        <input\n          type=\"text\"\n          name=\"postcode\"\n          value={this.state.postcode}\n          onChange={this.setFormState}\n        />\n        <label htmlFor=\"phoneNumber\">phone number:</label>\n        <input\n          type=\"text\"\n          name=\"phoneNumber\"\n          value={this.state.phoneNumber}\n          onChange={this.setFormState}\n        />\n        <label htmlFor=\"email\">email:</label>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.setFormState}\n        />\n        <label htmlFor=\"spots\">total spots:</label>\n        <input\n          type=\"number\"\n          name=\"spots\"\n          value={this.state.spots}\n          onChange={this.setFormState}\n        />\n        <label htmlFor=\"spotsforunderthree\">spots for under three:</label>\n        <input\n          type=\"number\"\n          name=\"spotsforunderthree\"\n          value={this.state.spotsforunderthree}\n          onChange={this.setFormState}\n        />\n        <label htmlFor=\"spotsforoverthree\">spots for over three</label>\n        <input\n          type=\"number\"\n          name=\"spotsforoverthree\"\n          value={this.state.spotsforoverthree}\n          onChange={this.setFormState}\n        />\n        <button type=\"submit\" onClick={this.addNewKita}>\n          submit\n        </button>\n        {this.state.message && <p>{this.state.message}</p>}\n      </div>\n    );\n  }\n}\n\nexport default AddKita;\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport MapGL, { Source, Layer } from \"react-map-gl\";\n\n// app.js\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport Navbar from \"./components/Navbar.js\";\nimport Signup from \"./components/Signup.js\";\nimport Login from \"./components/Login.js\";\nimport UserPortal from \"./components/UserPortal\";\nimport Footer from \"./components/Footer.js\";\nimport DiscoverHamburg from \"./components/DiscoverHamburg\";\nimport Discover from \"./components/Discover.js\";\n// import Map from \"./components/Map.js\";\nimport Detail from \"./components/Detail.js\";\n\nimport DisplayMaps from \"./components/DisplayMaps\";\nimport AddKita from \"./components/AddKita\";\n// import DisplayKitas from \"./components/DisplayKitas\";\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user\n  };\n\n  setUser = userObj => {\n    this.setState({\n      user: userObj\n    });\n  };\n\n  updatePage = () => {\n    this.forceUpdate();\n  };\n\n  //Language Switcher\n  // changeLang = () => {\n  //   const lang = localStorage.getItem(\"lang\");\n  //   if (lang === \"de\") {\n  //     localStorage.setItem(\"lang\", \"en\");\n  //   } else if (lang === \"en\") {\n  //     localStorage.setItem(\"lang\", \"de\");\n  //   }\n  //   this.forceUpdate();\n  // };\n\n  render() {\n    //console.log(\"APP\", this.state.user);\n    return (\n      <div className=\"App\">\n        <Navbar\n          setUser={this.setUser}\n          user={this.state.user}\n          updatePage={this.updatePage}\n          //This means exporting \"updatePage\" to Navbar\n        />\n        {/* <button onClick={this.changeLang}>Change Language</button> */}\n        <Route exact path=\"/\" component={Home} />\n        <Route\n          exact\n          path=\"/signup\"\n          render={props => (\n            <Signup\n              history={props.history}\n              user={this.state.user}\n              setUser={this.setUser}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={props => (\n            <Login history={props.history} setUser={this.setUser} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/userportal\"\n          render={props => <UserPortal {...props} user={this.state.user} />}\n        />\n        <Route exact path=\"/map\" component={DisplayMaps} />\n        <Route\n          exact\n          path=\"/discover\"\n          render={props => <Discover {...props} user={this.state.user} />}\n        />\n        {/* <Route exact path=\"/discover\" component={Discover} /> */}\n        <Route exact path=\"/discover/hamburg\" component={DiscoverHamburg} />\n        <Route\n          exact\n          path=\"/discover/:id\"\n          render={props => <Detail {...props} user={this.state.user} />}\n        />\n        <Route exact path=\"/addkita\" component={AddKita} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// Language Switcher Setup\nif (!localStorage.getItem(\"lang\")) {\n  localStorage.setItem(\"lang\", \"de\");\n}\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={response.data} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}